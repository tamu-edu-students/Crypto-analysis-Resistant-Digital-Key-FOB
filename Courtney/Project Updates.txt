September 19th, 2023
During the last week I hashed out the final details of how the technology works from our sponser. I am going to start this week focusing in on the three algorithums and the specifics of how they work. The goal is by next Tuesday (start of lab) to have planned out the code for all three algorithums so I will be ready to start coding next week. I plan to code the Diffie-Hellman Key Exchange Protocol first, then the AES-256, and finally the SHA-256.

September 26th, 2023
During the last week I worked on planning my code and the FSR, ICD, schedule, and validation plan documents due this Thursday. I also have redefined the scope of my subsystem to instead of coding the three algorthums from scatch and designing the other parts of the registration and communication processes, I will use the pre-built libaries with the algorithums in them and focus on implementing other parts of the registration and communication processes. I am a little behind in my schedule as I am not done with my code planning but I hope to finish the last bit I need to do in lab today so I can start working on the coding and have some code to show next week in lab.

October 3rd, 2023
This past week I worked on finishing the FSR, ICD, schedule, and validation plan documents and getting ready for our introduction presentation this upcoming Wednesday (10/4). I also downloaded the needed software to be able to do the code for the device in Kotlin and the code for the vechile in C++. Lastly, I started working on the coding for the Diffie-Hellman Key Exchange protocol.

October 10th, 2023
I am currently running behind schedule. I started working on the Diffie-Hellman Key Exchange protocol but I got stuck on the best method to create a random prime number and generator (primative root of the prime number). I have an idea on how to proceded but I am still doing research into it. I know how to code the rest of the protocol and once I get this resolved I expect for it to go smoothly. I hope to get back on track this week by having the Diffie-Hellman Key Exchange Protocol and AES 256 Encrpytion coding done by next Tuesday.


October 17th, 2023
After running into many, many issues, I have finally finished the Diffie-Hellman Key Exchange for the device (in Kotlin) and the vehicle (C++). I am now starting to work on the AES Encryption process for the device and the decryption process for the vehicle. I am still running behind but I am working very hard to get back on schedule.

October 24th, 2023
I found a major glitch in my DHKE so I fixed that this week. I also started working on the AES Encryption Algorithm. I am still running ~2 weeks behind but I am actively working to get back on schedule and I have ~2 buffer weeks.

October 31st, 2023
This past week I worked more on the AES protocol. I decided what crpytography libary to use for the C++ vehicle code and I am working on figuring out what mode of AES to use. This week I plan to finish up the AES encryption and decryption protocol and maybe even start on the SHA-256 protocol.

November 7th, 2023
This past week I finished all of the code for the deivce (i.e. all the code that needs to be done in Kotlin) including the AES-256 Encryption algortithm, SHA-256 for the device, and the transformation of the Bit Array for the hand signature into the Z-Hardware Profile. This upcoming week I plan to finish the vehicle code (i.e. all the code done in C++) including the AES-256 Decryption algorithm, SHA-256 for the vehicle, and the verification of the Dynamic Digital Signatures. This will then give me two weeks before final demo to test the completed algorithms and make sure all the values are able to be accruatly passed back and forth as well as make the needed changes to the Diffie-Hellman Key Exchange Protocol.